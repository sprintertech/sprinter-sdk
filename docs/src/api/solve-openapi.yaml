openapi: 3.1.0
info:
  title: Swap by Blanc
  description: API used by Blanc Swap
  version: 1.0.0-beta

security:
  - BasicAuth: []

servers:
  - url: https://swaps.sprinter.tech/mainnet
    description: Mainnet Swap API
  - url: https://swaps.sprinter.tech/base
    description: Base Swap API

paths:
  /v1/route:
    get:
      operationId: getRouteV1
      description: Calculate the optimal swap route and generate execution parameters for a token exchange
      parameters:
        - in: query
          name: amountIn
          description: The amount of input tokens to swap (in token's smallest unit)
          schema:
            $ref: "#/components/schemas/TokenAmount"
          required: true
        - in: query
          name: tokenIn
          description: Contract address of the input token to sell
          schema:
            $ref: "#/components/schemas/Address"
          required: true
        - in: query
          name: tokenOut
          description: Contract address of the output token to buy
          schema:
            $ref: "#/components/schemas/Address"
          required: true
        - in: query
          name: slippageBps
          description: The slippage tolerance in basis points (e.g., 50 for 0.5%)
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 10000
            default: 50
          required: false
      responses:
        200:
          description: Successfully calculated swap route with execution details
          headers:
            Request-ID:
              $ref: "#/components/headers/RequestID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteV1Response"
        400:
          description: Bad request due to invalid parameters
          headers:
            Request-ID:
              $ref: "#/components/headers/RequestID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Unauthorized access due to invalid or missing credentials
          headers:
            Request-ID:
              $ref: "#/components/headers/RequestID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: No viable swap route found for the given parameters
          headers:
            Request-ID:
              $ref: "#/components/headers/RequestID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal server error
          headers:
            Request-ID:
              $ref: "#/components/headers/RequestID"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

  headers:
    RequestID:
      description: Unique request identifier
      schema:
        type: string
        format: hex
        pattern: "^0x[a-fA-F0-9]{24}$"

  schemas:
    Address:
      description: Ethereum contract address (20 bytes) encoded as hexadecimal with 0x prefix
      type: string
      pattern: "^0x[a-fA-F0-9]{40}$"

    Bytes:
      description: Arbitrary byte data encoded as hexadecimal with 0x prefix
      type: string
      pattern: "^0x[a-fA-F0-9]*$"

    TokenAmount:
      description: Amount of an ERC20 token as a decimal string (no scientific notation)
      type: string
      pattern: "^[0-9]+$"

    RouteV1Response:
      description: Successfully created route with execution details
      type: object
      required: [amountOut, minAmountOut, target, callData]
      properties:
        amountOut:
          description: Amount of tokens to receive
          $ref: "#/components/schemas/TokenAmount"
        minAmountOut:
          description: Minimum amount of tokens to receive after slippage
          $ref: "#/components/schemas/TokenAmount"
        target:
          description: The target contract address for the swap
          $ref: "#/components/schemas/Address"
        callData:
          description: Hex encoded calldata for the swap
          $ref: "#/components/schemas/Bytes"

    Error:
      description: Error response with details
      type: object
      required: [code, error]
      properties:
        code:
          description: Error code indicating the type of error
          type: integer
        error:
          description: Error message
          type: string
