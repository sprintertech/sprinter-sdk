definitions:
  config.Token:
    properties:
      address:
        type: string
      decimals:
        type: integer
    required:
      - address
      - decimals
    type: object
  entity.Amount:
    properties:
      amount:
        description: amount in lowest denomination
        example: ""
        type: string
      amountUSD:
        type: number
    required:
      - amount
      - amountUSD
    type: object
  entity.ChainID:
    enum:
      - 1
      - 42161
      - 10
      - 137
      - 8453
      - 43114
      - 100
      - 8333
      - 11155111
      - 1993
      - 19934
      - 84532
    format: int32
    type: integer
    x-enum-varnames:
      - Ethereum
      - Arbitrum
      - Optimism
      - Polygon
      - Base
      - Avalanche
      - Gnosis
      - B3
      - Sepolia
      - B3Sepolia
      - B4Sepolia
      - BaseSepolia
  entity.FungibleToken:
    properties:
      addresses:
        additionalProperties:
          type: string
        description: Maps chain id to token address on that chain
        example:
          "1": 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48
        type: object
      decimals:
        type: integer
      logoURI:
        type: string
      name:
        type: string
      symbol:
        type: string
    required:
      - addresses
      - decimals
      - logoURI
      - name
      - symbol
    type: object
  entity.NativeToken:
    properties:
      decimals:
        type: integer
      name:
        type: string
    required:
      - decimals
      - name
    type: object
  entity.Network:
    properties:
      blockTime:
        type: integer
      chainID:
        $ref: "#/definitions/entity.ChainID"
      chainType:
        type: string
      logoURI:
        type: string
      name:
        type: string
      nativeToken:
        $ref: "#/definitions/entity.NativeToken"
      rpcURLs:
        items:
          type: string
        type: array
    required:
      - blockTime
      - chainID
      - chainType
      - logoURI
      - name
      - nativeToken
      - rpcURLs
    type: object
  entity.TokenTransferQuote:
    properties:
      amount:
        description: amount of tokens in lowest denomination
        example: ""
        type: string
      approvals:
        description: approvals that need to be executed before transaction
        items:
          $ref: "#/definitions/entity.Transaction"
        type: array
      destinationChain:
        $ref: "#/definitions/entity.ChainID"
      destinationTokenAddress:
        type: string
      duration:
        description: how long transfer will take in seconds
        type: number
      fee:
        $ref: "#/definitions/entity.Amount"
      gasCost:
        $ref: "#/definitions/entity.Amount"
      senderAddress:
        type: string
      sourceChain:
        $ref: "#/definitions/entity.ChainID"
      sourceTokenAddress:
        type: string
      tool:
        $ref: "#/definitions/entity.Tool"
      transaction:
        allOf:
          - $ref: "#/definitions/entity.Transaction"
        description: transaction request to be sent to the wallet
    required:
      - amount
      - approvals
      - destinationChain
      - destinationTokenAddress
      - duration
      - fee
      - gasCost
      - senderAddress
      - sourceChain
      - sourceTokenAddress
      - tool
      - transaction
    type: object
  entity.Tool:
    properties:
      logoURI:
        type: string
      name:
        type: string
    required:
      - logoURI
      - name
    type: object
  entity.Transaction:
    properties:
      chainId:
        $ref: "#/definitions/entity.ChainID"
      data:
        type: string
      from:
        type: string
      gasLimit:
        type: string
      to:
        type: string
      value:
        type: string
    required:
      - chainId
      - data
      - from
      - gasLimit
      - to
      - value
    type: object
  server.AccountFungibleBalanceHandler.response:
    properties:
      data:
        items:
          $ref: "#/definitions/server.chainBalance"
        type: array
    required:
      - data
    type: object
  server.AggregateBalanceSolutionHandler.response:
    properties:
      data:
        items:
          $ref: "#/definitions/entity.TokenTransferQuote"
        type: array
    required:
      - data
    type: object
  server.AggregateWithHookSolutionHandler.request:
    properties:
      account:
        type: string
      amount:
        type: string
      destination:
        $ref: "#/definitions/entity.ChainID"
      destinationContractCall:
        properties:
          approvalAddress:
            type: string
          callData:
            type: string
          contractAddress:
            type: string
          gasLimit:
            type: integer
          outputTokenAddress:
            type: string
        required:
          - callData
          - contractAddress
          - gasLimit
        type: object
      threshold:
        type: string
      token:
        type: string
      type:
        enum:
          - fungible
        type: string
      whitelistedSourceChains:
        items:
          $ref: "#/definitions/entity.ChainID"
        type: array
      whitelistedTools:
        items:
          type: string
        type: array
    required:
      - account
      - amount
      - destination
      - threshold
      - token
      - type
      - whitelistedSourceChains
      - whitelistedTools
    type: object
  server.AggregateWithHookSolutionHandler.response:
    properties:
      data:
        items:
          $ref: "#/definitions/entity.TokenTransferQuote"
        type: array
    required:
      - data
    type: object
  server.BalanceSweepHandler.response:
    properties:
      data:
        items:
          $ref: "#/definitions/entity.TokenTransferQuote"
        type: array
    required:
      - data
    type: object
  server.BorrowCost:
    description: Borrow cost structure with a big.Int represented as string
    properties:
      borrowAmount:
        type: string
      borrowCost:
        type: string
      liquidityPool:
        type: string
      nonce:
        type: string
      signature:
        type: string
    required:
      - borrowAmount
      - borrowCost
      - liquidityPool
      - nonce
      - signature
    type: object
  server.BorrowQuoteRequest:
    properties:
      amount:
        description:
          amount of tokens for which we are requesting borrow quote (in
          the smallest denomination)
        example: "49805421"
        type: string
      exclusive_fill:
        description: boolean representing if you have exclusivity to fill this quote
        example: false
        type: boolean
      network:
        description: caip formated network id
        example: eip155:1
        type: string
      token:
        description: token address (hex)
        example: "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
        type: string
        format: hex
    required:
      - amount
      - exclusive_fill
      - network
      - token
    type: object
  server.ErrorResponse:
    properties:
      debug:
        type: string
      error:
        type: string
    required:
      - error
    type: object
  server.GetFungibleTokensByChainHandler.response:
    properties:
      data:
        items:
          $ref: "#/definitions/entity.FungibleToken"
        type: array
    required:
      - data
    type: object
  server.GetNetworksHandler.response:
    properties:
      data:
        items:
          $ref: "#/definitions/entity.Network"
        type: array
    required:
      - data
    type: object
  server.GetSolverHandler.response:
    properties:
      duration:
        type: integer
      solver:
        type: string
    required:
      - duration
      - solver
    type: object
  server.GetStashSupportedTokensHandler.response:
    properties:
      data:
        additionalProperties:
          $ref: "#/definitions/config.Token"
        type: object
    required:
      - data
    type: object
  server.GetSupportedFungibleTokens.response:
    properties:
      data:
        items:
          $ref: "#/definitions/entity.FungibleToken"
        type: array
    required:
      - data
    type: object
  server.GetSupportedToolsHandler.response:
    properties:
      tools:
        items:
          type: string
        type: array
    required:
      - tools
    type: object
  server.HealthHandler.response:
    properties:
      status:
        type: string
    required:
      - status
    type: object
  server.Quote:
    properties:
      borrowCost:
        type: string
      duration:
        type: string
      liquidityPool:
        type: string
      repaymentChain:
        $ref: "#/definitions/entity.ChainID"
      repaymentRecipient:
        type: string
      requiredInput:
        type: string
      requiredOutput:
        type: string
    required:
      - borrowCost
      - duration
      - liquidityPool
      - repaymentChain
      - repaymentRecipient
      - requiredInput
      - requiredOutput
    type: object
  server.SingleHopWithHookHandler.request:
    properties:
      account:
        type: string
      amount:
        type: string
      destination:
        $ref: "#/definitions/entity.ChainID"
      destinationContractCall:
        properties:
          approvalAddress:
            type: string
          callData:
            type: string
          contractAddress:
            type: string
          gasLimit:
            type: integer
          outputTokenAddress:
            type: string
        required:
          - callData
          - contractAddress
          - gasLimit
        type: object
      enableSwaps:
        type: boolean
      recipient:
        type: string
      threshold:
        type: string
      token:
        type: string
      type:
        enum:
          - fungible
        type: string
      whitelistedSourceChains:
        items:
          $ref: "#/definitions/entity.ChainID"
        type: array
      whitelistedTools:
        items:
          type: string
        type: array
    required:
      - account
      - amount
      - destination
      - enableSwaps
      - recipient
      - threshold
      - token
      - type
      - whitelistedSourceChains
      - whitelistedTools
    type: object
  server.SingleHopWithHookHandler.response:
    properties:
      data:
        items:
          $ref: "#/definitions/entity.TokenTransferQuote"
        type: array
    required:
      - data
    type: object
  server.chainBalance:
    properties:
      balance:
        description: token balance in lowest denomination
        example: "123"
        type: string
      chainId:
        type: integer
      tokenDecimals:
        type: integer
    required:
      - balance
      - chainId
      - tokenDecimals
    type: object
  server.response:
    properties:
      data:
        $ref: "#/definitions/server.Quote"
    required:
      - data
    type: object
info:
  contact: {}
paths:
  /liquidity/chain/{chainId}/protocol/{protocol}/deposit/{txHash}/request:
    get:
      consumes:
        - application/json
      description: This endpoint returns signed authorization for a liquidity transaction
      parameters:
        - description: input data (relay data)
          in: body
          name: Input
          required: true
          schema:
            type: string
        - description: caller address (solver address)
          in: body
          name: Caller
          required: true
          schema:
            type: string
        - description: Protocol
          in: path
          name: protocol
          required: true
          type: string
        - description: Transaction hash for the deposit
          in: path
          name: txHash
          required: true
          type: string
        - description: Destination chain caip id
          in: path
          name: chain
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/server.BorrowCost"
        "400":
          description: Bad request due to invalid input or missing parameters
          schema:
            $ref: "#/definitions/server.ErrorResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/server.ErrorResponse"
      summary: Get signing authorization for a liquidity transaction
      tags:
        - Liquidity
  /liquidity/chain/{chain}/protocol/{protocol}/type/{type}/quote:
    get:
      consumes:
        - application/json
      description:
        Calculates the borrow quote including borrow cost, required input/output,
        and duration.
      parameters:
        - description: Source CAIP chain ID (e.g., eip155:1)
          in: path
          name: chain
          required: true
          schema:
            type: string
            example: eip155:8453
        - description: Protocol name (e.g., Across)
          in: path
          name: protocol
          required: true
          schema:
            type: string
            example: mayan
        - description: Quote algorithm type (e.g., ExactInput, ExactOutput)
          in: path
          name: type
          required: true
          schema:
            type: string
            example: ExactOutput
        - description: Borrow quote request payload
          in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/server.BorrowQuoteRequest"
      produces:
        - application/json
      responses:
        "200":
          description: Successfully retrieved borrow quote".
          schema:
            $ref: "#/definitions/server.response"
        "400":
          description: Bad request due to invalid input or missing parameters".
          schema:
            $ref: "#/definitions/server.ErrorResponse"
        "500":
          description: Internal server error".
          schema:
            $ref: "#/definitions/server.ErrorResponse"
      summary:
        Get the borrow quote for a liquidity transaction based on the input
        data.
      tags:
        - Liquidity
swagger: "2.0"
